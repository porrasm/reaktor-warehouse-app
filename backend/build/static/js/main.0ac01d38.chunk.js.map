{"version":3,"sources":["services/productApi.ts","components/product.tsx","components/sidebar.tsx","utils/capitalize.ts","components/listing.tsx","App.tsx","index.tsx"],"names":["apiRetryID","getCategories","a","getAPIResponse","apiPath","categories","getManufacturers","category","manufacturers","getProducts","manufacturer","page","filter","params","pageItemCount","products","path","retries","retryID","i","axios","get","response","status","data","console","log","message","join","ProductInfo","product","Item","Content","Header","name","Description","availability","price","color","type","id","ProductList","clickHandler","List","divided","map","p","onClick","as","DDown","props","Dropdown","placeholder","fluid","selection","value","onChange","event","options","o","key","text","cat","substring","toUpperCase","SideBar","useState","setFilter","currentCategory","selectCategory","currentManufacturer","selectManufacturer","Input","icon","style","width","e","Button","updateFilter","pageCount","Pagination","boundaryRange","ellipsisItem","firstItem","lastItem","siblingRange","totalPages","activePage","onPageChange","selectPage","Number","loadingMessage","length","Message","Icon","loading","Listing","React","selectedProduct","view","setView","productData","setProductData","setSelection","setProducts","useEffect","loadCategories","productApi","updateProducts","window","alert","selectProduct","Container","Grid","centered","columns","Column","Segment","Rail","position","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ac01d38.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { IProduct } from '../../../general_types'\r\n\r\nconst baseURL = '/api/'\r\n\r\n// Used to cancel API call retries if another API call is requested\r\nlet apiRetryID = 0\r\n\r\n\r\nconst getCategories = async (): Promise<string[]> => {\r\n  const categories = await getAPIResponse<string[]>(apiPath([\"products\", \"categories\"]))\r\n  return categories ? categories : []\r\n}\r\nconst getManufacturers = async (category: string): Promise<string[]> => {\r\n  const manufacturers = await getAPIResponse<string[]>(apiPath([\"products\", \"manufacturers\"]), 6, { category })\r\n  return manufacturers ? manufacturers : []\r\n}\r\nconst getProducts = async (category: string, manufacturer: string, page: number, filter: string): Promise<IProduct[]> => {\r\n  const params = {\r\n    category,\r\n    page,\r\n    filter,\r\n    manufacturer,\r\n    pageItemCount: 100\r\n  }\r\n  const products = await getAPIResponse<IProduct[]>(apiPath([\"products\"]), 6, params)\r\n  return products ? products : []\r\n}\r\n\r\nconst getAPIResponse = async <T>(path: string, retries = 6, params: any = {}): Promise<T | null> => {\r\n  const retryID = ++apiRetryID\r\n  for (let i = 0; i < retries; i++) {\r\n    if (retryID !== apiRetryID) {\r\n      break\r\n    }\r\n    try {\r\n      const response = await axios.get(path, { params })\r\n      if (response.status != 200) {\r\n        throw \"Invalid response status received: \" + response.status\r\n      }\r\n      return response.data as T\r\n    } catch (e) {\r\n      console.log(\"Error fetching JSON from API: \", e.message, e)\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nconst apiPath = (path: string[]) => {\r\n  return baseURL + path.join(\"/\")\r\n}\r\n\r\nexport default {\r\n  getCategories,\r\n  getManufacturers,\r\n  getProducts\r\n}","import { IProduct } from '../../../general_types'\r\nimport { Item, List } from 'semantic-ui-react'\r\n\r\ntype ProductProps = {\r\n  product: IProduct\r\n}\r\n\r\ntype ProductListProps = {\r\n  products: IProduct[],\r\n  clickHandler: (product: IProduct) => void\r\n}\r\n\r\ntype ProductListItemProps = {\r\n  product: IProduct,\r\n  clickHandler: () => void\r\n}\r\n\r\n\r\nexport const ProductInfo : React.FC<ProductProps> = ({ product }: ProductProps) => <Item>\r\n  <Item.Content>\r\n    <Item.Header>{product.name}</Item.Header>\r\n    <Item.Description>\r\n      Availability: {product.availability}\r\n    </Item.Description>\r\n    <Item.Description>\r\n      Price: {product.price}\r\n    </Item.Description>\r\n    <Item.Description>\r\n      Manufacturer: {product.manufacturer}\r\n    </Item.Description>\r\n    <Item.Description>\r\n      Color: {product.color.join(\", \")}\r\n    </Item.Description>\r\n    <Item.Description>\r\n      Type: {product.type}\r\n    </Item.Description>\r\n    <Item.Description>\r\n      ID: {product.id}\r\n    </Item.Description>\r\n  </Item.Content>\r\n</Item>\r\n\r\nexport const ProductList: React.FC<ProductListProps> = ({ products, clickHandler }: ProductListProps) => <List divided>\r\n  {products.map(p => {\r\n    return <List.Item key={p.id} onClick={() => clickHandler(p)}>\r\n      <List.Content>\r\n        <List.Header as='a'>{p.name}</List.Header>\r\n        <List.Description>Availability: {p.availability}</List.Description>\r\n        <List.Description>Price: {p.price}</List.Description>\r\n      </List.Content>\r\n    </List.Item>\r\n  })}\r\n</List>\r\n\r\nexport const ProductListItem: React.FC<ProductListItemProps> = ({ product, clickHandler }: ProductListItemProps) => <List.Item key={product.id} onClick={clickHandler}>\r\n  <List.Content>\r\n    <List.Header as='a'>{product.name}</List.Header>\r\n    {product.availability == \"\" ? \"\" : <List.Description>Availability: {product.availability}</List.Description>}\r\n\r\n    <List.Description>Price: {product.price}</List.Description>\r\n  </List.Content>\r\n</List.Item>","import React, { useState } from 'react'\r\nimport { Dropdown, Input, Button, Pagination, Message, Icon } from 'semantic-ui-react'\r\nimport { capitalize } from '../utils/capitalize'\r\n\r\ntype SideBarProps = {\r\n  currentCategory: string,\r\n  categories: string[],\r\n  selectCategory: (category: string) => void,\r\n  currentManufacturer: string,\r\n  manufacturers: string[],\r\n  selectManufacturer: (manufacturer: string) => void,\r\n  updateFilter: (filter: string) => void,\r\n  page: number,\r\n  pageCount: number,\r\n  selectPage: (page: number) => void,\r\n  loadingMessage: string,\r\n}\r\n\r\ntype DDownProps = {\r\n  placeholder: string,\r\n  value: string,\r\n  onChange: (value: string) => void,\r\n  options: string[]\r\n}\r\n\r\nconst SideBar: React.FC<SideBarProps> = (props: SideBarProps) => {\r\n\r\n  const [filter, setFilter] = useState(\"\")\r\n\r\n  return <div>\r\n    <DDown placeholder=\"Select category\"\r\n      value={props.currentCategory}\r\n      onChange={props.selectCategory}\r\n      options={props.categories} />\r\n    <DDown placeholder=\"Select manufacturer\"\r\n      value={props.currentManufacturer}\r\n      onChange={props.selectManufacturer}\r\n      options={props.manufacturers} />\r\n      &nbsp;\r\n      <Input icon='search'\r\n      style={{ width: \"272px\" }}\r\n      onChange={(e, data) => setFilter(data.value as string)}>\r\n      <input />\r\n      <Button type='submit' onClick={() => props.updateFilter(filter)}>Search</Button>\r\n    </Input>\r\n      &nbsp;\r\n      {props.pageCount > 0 ? <Pagination\r\n      style={{ width: \"272px\" }}\r\n      boundaryRange={0}\r\n      ellipsisItem={null}\r\n      firstItem={null}\r\n      lastItem={null}\r\n      siblingRange={1}\r\n      totalPages={props.pageCount}\r\n      activePage={props.page}\r\n      onPageChange={(e, data) => props.selectPage(Number(data.activePage))}\r\n    /> : \"\"}\r\n    &nbsp;\r\n      {props.loadingMessage.length == 0 ? \"\" : <Message icon>\r\n      <Icon name='circle notched' loading />\r\n      <Message.Content>{props.loadingMessage}</Message.Content>\r\n    </Message>}\r\n  </div>\r\n}\r\n\r\nconst DDown: React.FC<DDownProps> = (props: DDownProps) => <Dropdown\r\n  placeholder={props.placeholder}\r\n  fluid\r\n  selection\r\n  value={props.value}\r\n  onChange={(event, data) => props.onChange(data.value as string)}\r\n  options={props.options.map(o => {\r\n    return {\r\n      key: o,\r\n      text: capitalize(o),\r\n      value: o\r\n    }\r\n  })}\r\n/>\r\n\r\nexport default SideBar","export const capitalize = (cat: string) => {\r\n  return cat.substring(0, 1).toUpperCase() + cat.substring(1)\r\n}","import React, { useEffect } from 'react';\r\nimport { Container, Grid, Rail, Segment, Message } from 'semantic-ui-react'\r\nimport productApi from '../services/productApi'\r\nimport { IProduct } from '../../../general_types'\r\nimport { ProductInfo, ProductList } from './product'\r\nimport SideBar from './sidebar'\r\n\r\ninterface IViewState {\r\n  loadingMessage: string\r\n  selectedProduct: IProduct | null\r\n}\r\n\r\ninterface IProductState {\r\n  categories: string[] | null\r\n  manufacturers: string[]\r\n}\r\n\r\ninterface IProductSelection {\r\n  category: string\r\n  manufacturer: string\r\n  page: number\r\n  filter: string\r\n}\r\n\r\ninterface IProductSelectionArgs {\r\n  category?: string\r\n  manufacturer?: string\r\n  page?: number\r\n  filter?: string\r\n}\r\n\r\nconst Listing: React.FC = () => {\r\n\r\n  const [view, setView] = React.useState<IViewState>({\r\n    loadingMessage: \"\",\r\n    selectedProduct: null\r\n  })\r\n  const [productData, setProductData] = React.useState<IProductState>({\r\n    categories: null,\r\n    manufacturers: [],\r\n  })\r\n  const [selection, setSelection] = React.useState<IProductSelection>({\r\n    category: \"\",\r\n    manufacturer: \"\",\r\n    page: 1,\r\n    filter: \"\"\r\n  })\r\n  const [products, setProducts] = React.useState<IProduct[]>([])\r\n\r\n  useEffect(() => {\r\n    if (!productData.categories) {\r\n      loadCategories()\r\n    }\r\n  })\r\n\r\n  //#region utilities\r\n  const loadCategories = async () => {\r\n    const categories = await productApi.getCategories()\r\n    setProductData({ ...productData, categories })\r\n  }\r\n\r\n  const selectPage = (page: number) => {\r\n    console.log(\"Select page: \", page)\r\n    updateProducts({ page, filter: selection.filter })\r\n  }\r\n\r\n  const updateFilter = (filter: string) => {\r\n    updateProducts({ page: 1, filter })\r\n  }\r\n\r\n  const getCurrentPageCount = () => {\r\n    return 100000\r\n  }\r\n\r\n  const selectManufacturer = async (manufacturer: string) => {\r\n    console.log(\"Enabled manufacturer: \", manufacturer)\r\n    updateProducts({ manufacturer })\r\n  }\r\n\r\n  const selectCategory = async (category: string) => {\r\n    setSelection({ ...selection, category })\r\n    setView({ ...view, loadingMessage: \"Loading manufacturers...\" })\r\n    console.log(\"Enabled category: \", category)\r\n\r\n    const manufacturers = await productApi.getManufacturers(category)\r\n    setProductData({ ...productData, manufacturers })\r\n    console.log(\"Set manufacturers: \", manufacturers)\r\n\r\n    if (manufacturers.length == 0) {\r\n      window.alert(\"There seems to be an error accessing the API. Please try again.\")\r\n      return\r\n    }\r\n\r\n    updateProducts({ category, manufacturer: manufacturers[0] })\r\n  }\r\n\r\n  const updateProducts = async ({ category = selection.category, manufacturer = selection.manufacturer, page = 1, filter = \"\" }: IProductSelectionArgs) => {\r\n    console.log(\"Update products with page: \", page)\r\n    setView({ ...view, loadingMessage: \"Loading products...\" })\r\n    setProducts([])\r\n    const products = await productApi.getProducts(category, manufacturer, page, filter)\r\n    setProducts(products)\r\n    setSelection({ ...selection, category, manufacturer, page, filter })\r\n    setView({ ...view, loadingMessage: \"\" })\r\n  }\r\n\r\n  const selectProduct = async (selectedProduct: IProduct) => {\r\n    console.log(\"Selected product: \", selectedProduct)\r\n    setView({ ...view, selectedProduct })\r\n  }\r\n  //#endregion\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Grid centered columns={3}>\r\n          <Grid.Column>\r\n            <Segment>\r\n              <ProductList products={products} clickHandler={selectProduct} />\r\n\r\n              <Rail position=\"left\">\r\n                <SideBar\r\n                  currentCategory={selection.category}\r\n                  categories={productData.categories ? productData.categories : []}\r\n                  selectCategory={selectCategory}\r\n                  currentManufacturer={selection.manufacturer}\r\n                  manufacturers={productData.manufacturers}\r\n                  selectManufacturer={selectManufacturer}\r\n                  updateFilter={updateFilter}\r\n                  page={selection.page}\r\n                  pageCount={getCurrentPageCount()}\r\n                  selectPage={selectPage}\r\n                  loadingMessage={view.loadingMessage}\r\n                />\r\n              </Rail>\r\n\r\n              <Rail position=\"right\">\r\n                {view.selectedProduct ? <ProductInfo product={view.selectedProduct} />\r\n                  : <Message><Message.Content>Select a product for more information</Message.Content></Message>}\r\n              </Rail>\r\n\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Listing","import Listing from './components/listing';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Listing />\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}