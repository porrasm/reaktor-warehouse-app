[{"P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\index.tsx":"1","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\reportWebVitals.ts":"2","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\App.tsx":"3","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\components\\listing.tsx":"4","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\services\\productApi.ts":"5","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\components\\product.tsx":"6","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\components\\sidebar.tsx":"7","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\utils\\capitalize.ts":"8"},{"size":520,"mtime":1611064692060,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":236,"mtime":1610805904208,"results":"12","hashOfConfig":"10"},{"size":6740,"mtime":1611067367509,"results":"13","hashOfConfig":"10"},{"size":2076,"mtime":1611061186820,"results":"14","hashOfConfig":"10"},{"size":2007,"mtime":1611067231562,"results":"15","hashOfConfig":"10"},{"size":2336,"mtime":1611067390868,"results":"16","hashOfConfig":"10"},{"size":110,"mtime":1611065615329,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1kl511w",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\index.tsx",[],["37","38"],"P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\reportWebVitals.ts",[],"P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\App.tsx",["39"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Listing from './components/listing';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Listing />\n\n    </div>\n  );\n}\n\nexport default App;\n","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\components\\listing.tsx",["40","41","42","43","44"],"P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\services\\productApi.ts",["45","46","47"],"import axios from 'axios'\r\n\r\nconst baseURL = '/api/'\r\nconst timeout = 250\r\n\r\nlet callID = 0\r\n\r\nexport interface IProduct {\r\n  id: string,\r\n  type: string,\r\n  name: string,\r\n  color: string[],\r\n  price: number,\r\n  manufacturer: string\r\n}\r\n\r\nexport interface IAvailability {\r\n  id: string,\r\n  availability: string\r\n}\r\n\r\nconst getCategoryProducts = async (category: string, retries = 6): Promise<IProduct[]> => {\r\n  const id = ++callID\r\n  for (let i = 0; i < retries; i++) {\r\n    if (id !== callID) {\r\n      break\r\n    }\r\n    console.log(`API request for products (retries left: ${retries - 1 - i}): `, category)\r\n    try {\r\n      const response = await axios.get(apiPath([\"products\", category]))\r\n      if (response.status = 200) {\r\n        return response.data as IProduct[]\r\n      } else {\r\n        console.log(\"Error fetchin product data: \", response)\r\n        return []\r\n      }\r\n    } catch (e) {\r\n      console.log('Error getting products: ', { category, message: e.message, e })\r\n    }\r\n\r\n    await delay(timeout)\r\n  }\r\n  return []\r\n}\r\n\r\n\r\nconst getManufacturerAvailability = async (manufacturer: string, retries = 6): Promise<IAvailability[]> => {\r\n  const id = ++callID\r\n  for (let i = 0; i < retries; i++) {\r\n    if (id !== callID) {\r\n      break\r\n    }\r\n    console.log(`API request for availability (retries left: ${retries - 1 - i}): `, manufacturer)\r\n    try {\r\n      const response = await axios.get(apiPath([\"availability\", manufacturer]))\r\n      if (response.status == 200) {\r\n        return response.data as IAvailability[]\r\n      } else {\r\n        console.log(\"Error fetching availability data: \", response)\r\n        return []\r\n      }\r\n\r\n    } catch (e) {\r\n      console.log('Error getting availability: ', { manufacturer, message: e.message, e })\r\n    }\r\n\r\n    await delay(timeout)\r\n  }\r\n  return []\r\n}\r\n\r\nconst delay = (ms: number) => {\r\n  return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst apiPath = (path: string[]) => {\r\n  return baseURL + path.join(\"/\")\r\n}\r\n\r\nexport default {\r\n  getCategoryProducts,\r\n  getManufacturerAvailability,\r\n}","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\components\\product.tsx",["48","49"],"P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\components\\sidebar.tsx",["50"],"P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\utils\\capitalize.ts",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":12},{"ruleId":"55","severity":1,"message":"59","line":1,"column":10,"nodeType":"57","messageId":"58","endLine":1,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":97,"column":38,"nodeType":"62","messageId":"63","endLine":97,"endColumn":40},{"ruleId":"60","severity":1,"message":"61","line":142,"column":25,"nodeType":"62","messageId":"63","endLine":142,"endColumn":27},{"ruleId":"60","severity":1,"message":"61","line":160,"column":22,"nodeType":"62","messageId":"63","endLine":160,"endColumn":24},{"ruleId":"60","severity":1,"message":"61","line":172,"column":37,"nodeType":"62","messageId":"63","endLine":172,"endColumn":39},{"ruleId":"64","severity":1,"message":"65","line":31,"column":11,"nodeType":"66","messageId":"67","endLine":31,"endColumn":32},{"ruleId":"60","severity":1,"message":"61","line":56,"column":27,"nodeType":"62","messageId":"63","endLine":56,"endColumn":29},{"ruleId":"68","severity":1,"message":"69","line":80,"column":1,"nodeType":"70","endLine":83,"endColumn":2},{"ruleId":"60","severity":1,"message":"61","line":50,"column":25,"nodeType":"62","messageId":"63","endLine":50,"endColumn":27},{"ruleId":"60","severity":1,"message":"61","line":61,"column":19,"nodeType":"62","messageId":"63","endLine":61,"endColumn":21},{"ruleId":"60","severity":1,"message":"61","line":59,"column":36,"nodeType":"62","messageId":"63","endLine":59,"endColumn":38},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'stringify' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]