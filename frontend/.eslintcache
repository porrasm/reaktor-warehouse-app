[{"P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\index.tsx":"1","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\App.tsx":"2","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\components\\listing.tsx":"3","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\services\\productApi.ts":"4","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\components\\product.tsx":"5","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\components\\sidebar.tsx":"6","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\utils\\capitalize.ts":"7"},{"size":238,"mtime":1611229715591,"results":"8","hashOfConfig":"9"},{"size":158,"mtime":1611229744012,"results":"10","hashOfConfig":"9"},{"size":4651,"mtime":1611682333722,"results":"11","hashOfConfig":"9"},{"size":1739,"mtime":1611682128746,"results":"12","hashOfConfig":"9"},{"size":1970,"mtime":1611404811650,"results":"13","hashOfConfig":"9"},{"size":2503,"mtime":1611682232924,"results":"14","hashOfConfig":"9"},{"size":110,"mtime":1611065615329,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1kl511w",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\index.tsx",[],["34","35"],"P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\App.tsx",[],"P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\components\\listing.tsx",["36"],"P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\services\\productApi.ts",["37","38","39"],"import axios from 'axios'\r\nimport { IProduct } from '../../../general_types'\r\n\r\nconst baseURL = '/api/'\r\n\r\n// Used to cancel API call retries if another API call is requested\r\nlet apiRetryID = 0\r\n\r\nconst pageItemCount = 100\r\n\r\nconst getCategories = async (): Promise<string[]> => {\r\n  const categories = await getAPIResponse<string[]>(apiPath([\"products\", \"categories\"]))\r\n  return categories ? categories : []\r\n}\r\nconst getManufacturers = async (category: string): Promise<string[]> => {\r\n  const manufacturers = await getAPIResponse<string[]>(apiPath([\"products\", \"manufacturers\"]), 6, { category })\r\n  return manufacturers ? manufacturers : []\r\n}\r\nconst getProducts = async (category: string, manufacturer: string, page: number, filter: string): Promise<IProduct[]> => {\r\n  const params = {\r\n    category,\r\n    page,\r\n    filter,\r\n    manufacturer,\r\n    pageItemCount\r\n  }\r\n  const products = await getAPIResponse<IProduct[]>(apiPath([\"products\"]), 6, params)\r\n  return products ? products : []\r\n}\r\n\r\nconst getAPIResponse = async <T>(path: string, retries = 6, params: any = {}): Promise<T | null> => {\r\n  const retryID = ++apiRetryID\r\n  for (let i = 0; i < retries; i++) {\r\n    if (retryID !== apiRetryID) {\r\n      break\r\n    }\r\n    try {\r\n      const response = await axios.get(path, { params })\r\n      if (response.status != 200) {\r\n        throw \"Invalid response status received: \" + response.status\r\n      }\r\n      return response.data as T\r\n    } catch (e) {\r\n      console.log(\"Error fetching JSON from API: \", e.message, e)\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nconst apiPath = (path: string[]) => {\r\n  return baseURL + path.join(\"/\")\r\n}\r\n\r\nexport default {\r\n  getCategories,\r\n  getManufacturers,\r\n  getProducts,\r\n  pageItemCount\r\n}","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\components\\product.tsx",["40"],"import { IProduct } from '../../../general_types'\r\nimport { Item, List } from 'semantic-ui-react'\r\n\r\ntype ProductProps = {\r\n  product: IProduct\r\n}\r\n\r\ntype ProductListProps = {\r\n  products: IProduct[],\r\n  clickHandler: (product: IProduct) => void\r\n}\r\n\r\ntype ProductListItemProps = {\r\n  product: IProduct,\r\n  clickHandler: () => void\r\n}\r\n\r\n\r\nexport const ProductInfo : React.FC<ProductProps> = ({ product }: ProductProps) => <Item>\r\n  <Item.Content>\r\n    <Item.Header>{product.name}</Item.Header>\r\n    <Item.Description>\r\n      Availability: {product.availability}\r\n    </Item.Description>\r\n    <Item.Description>\r\n      Price: {product.price}\r\n    </Item.Description>\r\n    <Item.Description>\r\n      Manufacturer: {product.manufacturer}\r\n    </Item.Description>\r\n    <Item.Description>\r\n      Color: {product.color.join(\", \")}\r\n    </Item.Description>\r\n    <Item.Description>\r\n      Type: {product.type}\r\n    </Item.Description>\r\n    <Item.Description>\r\n      ID: {product.id}\r\n    </Item.Description>\r\n  </Item.Content>\r\n</Item>\r\n\r\nexport const ProductList: React.FC<ProductListProps> = ({ products, clickHandler }: ProductListProps) => <List divided>\r\n  {products.map(p => {\r\n    return <List.Item key={p.id} onClick={() => clickHandler(p)}>\r\n      <List.Content>\r\n        <List.Header as='a'>{p.name}</List.Header>\r\n        <List.Description>Availability: {p.availability}</List.Description>\r\n        <List.Description>Price: {p.price}</List.Description>\r\n      </List.Content>\r\n    </List.Item>\r\n  })}\r\n</List>\r\n\r\nexport const ProductListItem: React.FC<ProductListItemProps> = ({ product, clickHandler }: ProductListItemProps) => <List.Item key={product.id} onClick={clickHandler}>\r\n  <List.Content>\r\n    <List.Header as='a'>{product.name}</List.Header>\r\n    {product.availability == \"\" ? \"\" : <List.Description>Availability: {product.availability}</List.Description>}\r\n\r\n    <List.Description>Price: {product.price}</List.Description>\r\n  </List.Content>\r\n</List.Item>","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\components\\sidebar.tsx",["41","42","43"],"import React, { useState } from 'react'\r\nimport { Dropdown, Input, Button, Pagination, Message, Icon } from 'semantic-ui-react'\r\nimport { capitalize } from '../utils/capitalize'\r\n\r\ntype SideBarProps = {\r\n  currentCategory: string,\r\n  categories: string[],\r\n  selectCategory: (category: string) => void,\r\n  currentManufacturer: string,\r\n  manufacturers: string[],\r\n  selectManufacturer: (manufacturer: string) => void,\r\n  updateFilter: (filter: string) => void,\r\n  page: number,\r\n  pageCount: number,\r\n  selectPage: (page: number) => void,\r\n  loadingMessage: string,\r\n}\r\n\r\ntype DDownProps = {\r\n  placeholder: string,\r\n  value: string,\r\n  onChange: (value: string) => void,\r\n  options: string[]\r\n}\r\n\r\nconst SideBar: React.FC<SideBarProps> = (props: SideBarProps) => {\r\n\r\n  const [filter, setFilter] = useState(\"\")\r\n\r\n  return <div>\r\n    <DDown placeholder=\"Select category\"\r\n      value={props.currentCategory}\r\n      onChange={props.selectCategory}\r\n      options={props.categories} />\r\n    <DDown placeholder=\"Select manufacturer\"\r\n      value={props.currentManufacturer}\r\n      onChange={props.selectManufacturer}\r\n      options={props.manufacturers} />\r\n      &nbsp;\r\n      {props.currentCategory == \"\" || props.currentManufacturer == \"\" ? \"\" : <div>\r\n      <Input icon='search'\r\n        style={{ width: \"272px\" }}\r\n        onChange={(e, data) => setFilter(data.value as string)}>\r\n        <input />\r\n        <Button type='submit' onClick={() => props.updateFilter(filter)}>Search</Button>\r\n      </Input>\r\n      &nbsp;\r\n      {props.pageCount > 0 ? <Pagination\r\n        style={{ width: \"272px\" }}\r\n        boundaryRange={0}\r\n        ellipsisItem={null}\r\n        firstItem={null}\r\n        lastItem={null}\r\n        siblingRange={1}\r\n        totalPages={props.pageCount}\r\n        activePage={props.page}\r\n        onPageChange={(e, data) => props.selectPage(Number(data.activePage))}\r\n      /> : \"\"}\r\n    </div>}\r\n\r\n    &nbsp;\r\n      {props.loadingMessage.length == 0 ? \"\" : <Message icon>\r\n      <Icon name='circle notched' loading />\r\n      <Message.Content>{props.loadingMessage}</Message.Content>\r\n    </Message>}\r\n  </div>\r\n}\r\n\r\nconst DDown: React.FC<DDownProps> = (props: DDownProps) => <Dropdown\r\n  placeholder={props.placeholder}\r\n  fluid\r\n  selection\r\n  value={props.value}\r\n  onChange={(event, data) => props.onChange(data.value as string)}\r\n  options={props.options.map(o => {\r\n    return {\r\n      key: o,\r\n      text: capitalize(o),\r\n      value: o\r\n    }\r\n  })}\r\n/>\r\n\r\nexport default SideBar","P:\\Stuff\\Projects\\reaktor-assignment\\frontend\\src\\utils\\capitalize.ts",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":89,"column":30,"nodeType":"50","messageId":"51","endLine":89,"endColumn":32},{"ruleId":"48","severity":1,"message":"52","line":39,"column":27,"nodeType":"50","messageId":"51","endLine":39,"endColumn":29},{"ruleId":"53","severity":1,"message":"54","line":40,"column":9,"nodeType":"55","messageId":"56","endLine":40,"endColumn":69},{"ruleId":"57","severity":1,"message":"58","line":54,"column":1,"nodeType":"59","endLine":59,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":58,"column":27,"nodeType":"50","messageId":"51","endLine":58,"endColumn":29},{"ruleId":"48","severity":1,"message":"49","line":40,"column":30,"nodeType":"50","messageId":"51","endLine":40,"endColumn":32},{"ruleId":"48","severity":1,"message":"49","line":40,"column":65,"nodeType":"50","messageId":"51","endLine":40,"endColumn":67},{"ruleId":"48","severity":1,"message":"49","line":62,"column":36,"nodeType":"50","messageId":"51","endLine":62,"endColumn":38},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]